[{"/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/App.js":"1","/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/reportWebVitals.js":"2","/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/index.js":"3","/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/LineGraph.js":"4","/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/Map.js":"5","/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/util.js":"6","/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/Footer.js":"7","/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/Table.js":"8","/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/InfoBox.js":"9"},{"size":11355,"mtime":1613564482089,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1608714499766,"results":"12","hashOfConfig":"11"},{"size":433,"mtime":1612280201970,"results":"13","hashOfConfig":"11"},{"size":2636,"mtime":1613473260832,"results":"14","hashOfConfig":"11"},{"size":1007,"mtime":1613562853357,"results":"15","hashOfConfig":"11"},{"size":3429,"mtime":1613564565080,"results":"16","hashOfConfig":"11"},{"size":939,"mtime":1611312487443,"results":"17","hashOfConfig":"11"},{"size":502,"mtime":1612280565953,"results":"18","hashOfConfig":"11"},{"size":1414,"mtime":1613490933619,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17adzlm",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/App.js",[],"/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/reportWebVitals.js",[],"/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/index.js",[],["44","45"],"/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/LineGraph.js",["46"],"import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label:  (tooltipItem, data) => {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n        ticks: {\n          fontColor: '#2196F3',\n          fontStyle: 'bold',\n       },\n    }\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          fontColor: '#2196F3',\n          fontStyle: 'bold',\n          callback:  (value, index, values) => {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\n\nconst buildChartData = (data, casesType) => {\n\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\n\n\nconst LineGraph= ({ casesType }) => {\n\n  const [data, setData] = useState({});\n  console.log(casesType)\n\n  const fetchData = async () => {\n    if (casesType!=='vaccinated'){\n    await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let chartData = buildChartData(data, casesType);\n        setData(chartData)\n        // buildChart(chartData);\n      });\n  }else {\n    await fetch(\"https://disease.sh/v3/covid-19/vaccine/coverage?lastdays=120\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let chartData = buildChartData(data, casesType);\n        setData(chartData)\n        // buildChart(chartData);\n      });\n  }\n}\n\n  useEffect(() => {\n    fetchData();\n  }, [casesType]);\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"#E91E63\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;\n","/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/Map.js",[],"/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/util.js",[],"/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/Footer.js",["47","48","49"],"//import { AppBar, Toolbar, Container, Typography} from \"@material-ui/core\";\nimport React from 'react';\nimport { AppBar, Toolbar, Typography, Container} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      top: 'auto',\n      bottom: 0,\n      alignItems: 'center',\n    }\n  }));\n\nconst Footer = () =>{\n    const classes = useStyles();\n    return (\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n      <h3>© 2021 LizzethGD</h3>\n        </Toolbar>\n      </AppBar>\n\n\n)\n}\n\n\nexport default Footer\n\n{/* \n    <AppBar position=\"sticky\">\n        <Toolbar>Lizzeth</Toolbar>\n      </AppBar>\n    \n    <AppBar position=\"static\" color=\"primary\">\n<Container maxWidth=\"md\">\n  <Toolbar>\n    <Typography variant=\"body1\" color=\"inherit\">\n      © 2021 LizzethGD\n    </Typography>\n  </Toolbar>\n</Container>\n</AppBar> */}","/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/Table.js",["50"]," \nimport React from 'react'\nimport './Table.css'\n//import numeral from 'numeral'\n\nconst Table = ({ countries }) => {\n    console.log(countries )\n  return (\n    <div className='table'>\n    <table >\n      {countries.map(({country, cases, flag}) => (\n        <tbody key={country}>\n        <tr >\n          <td><img src={flag}  width='40' height='30'/> {country}</td>\n          <td><strong>{cases}</strong></td>\n        </tr>\n        </tbody>\n      ))}\n    </table>\n    </div>\n  );\n}\n\nexport default Table;\n",["51","52"],"/home/lizzethgd/Escritorio/Javascript/covid-19-tracker/src/InfoBox.js",["53"],"import React from 'react'\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport \"./InfoBox.css\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\n\nconst InfoBox = ({ title, isRed, isPurple, isGreen, isBlue, cases, total, active, updated,...props }) => {\n\n  return (\n    <Card\n      onClick={props.onClick}\n      className={\n        `infoBox ${active && \"infoBox--selected\"} \n        ${isRed && \"infoBox--red\"} \n        ${isGreen && \"infoBox--green\"}\n        ${isPurple && \"infoBox--purple\"}\n        ${isBlue && \"infoBox--blue\"}` \n      }>\n      <CardContent>\n        <Typography color=\"textPrimary\" gutterBottom>\n          {title}\n        </Typography>\n        <h2 className={\n          `infoBox__cases ${!isRed && !isPurple && !isBlue && \"infoBox__cases--green\"}\n          ${isPurple && \"infoBox__cases--purple\"} ${isBlue && \"infoBox__cases--blue\"}` \n          }>\n         {total!==undefined ? numeral(total).format(\"0.0a\")+' Total' : 'No data'} \n        </h2>\n        <Typography className=\"infoBox__total\" color=\"textPrimary\">\n        {cases!==undefined ? prettyPrintStat(cases)+' Today' : 'No data'}  \n        </Typography>\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\n        {updated!==undefined ? new Date(updated).toUTCString() : 'No data'} \n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default InfoBox",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":106,"column":6,"nodeType":"60","endLine":106,"endColumn":17,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":27,"nodeType":"64","messageId":"65","endLine":3,"endColumn":37},{"ruleId":"62","severity":1,"message":"66","line":3,"column":39,"nodeType":"64","messageId":"65","endLine":3,"endColumn":48},{"ruleId":"67","severity":1,"message":"68","line":30,"column":1,"nodeType":"69","messageId":"70","endLine":43,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":14,"column":15,"nodeType":"73","endLine":14,"endColumn":56},{"ruleId":"54","replacedBy":"74"},{"ruleId":"56","replacedBy":"75"},{"ruleId":"62","severity":1,"message":"76","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":18},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["79"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["77"],["78"],"'sortData' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [casesType, fetchData]",{"range":"82","text":"83"},[2249,2260],"[casesType, fetchData]"]